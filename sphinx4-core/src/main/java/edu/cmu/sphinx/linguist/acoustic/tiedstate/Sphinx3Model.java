/*
 * Copyright 1999-2004 Carnegie Mellon University.
 * Portions Copyright 2004 Sun Microsystems, Inc.
 * Portions Copyright 2004 Mitsubishi Electric Research Laboratories.
 * All Rights Reserved.  Use is subject to license terms.
 *
 * See the file "license.terms" for information on usage and
 * redistribution of this file, and for a DISCLAIMER OF ALL
 * WARRANTIES.
 *
 */
package edu.cmu.sphinx.linguist.acoustic.tiedstate;

import edu.cmu.sphinx.linguist.acoustic.Unit;
import java.util.Map;
import java.util.Properties;

/**
 * Holds a tied-state acoustic model generated by the Sphinx-3 trainer.
 * <p>
 * The acoustic model is stored as a directory specified by a URL. The
 * dictionary and language model files are not required to be in the package.
 * You can specify their locations separately.
 * <p>
 * Configuration file should set mandatory property of component: <b>location</b> -
 * this specifies the directory where the actual model
 * data files are. You can use <b>resource:</b> prefix to refer to files packed
 * inside jar or any other URI scheme.
 * The actual model data files are named "mdef", "means", "variances",
 * "transition_matrices", "mixture_weights".
 */
public class Sphinx3Model implements Model {

  private final static int CONTEXT_SIZE = 1;
  private final Pool<Senone> senonePool;
  private final HMMManager hmmManager;
  private final Map<String, Unit> contextIndependentUnits;
  private final Properties modelProps;

  public Sphinx3Model(Pool<Senone> senonePool, HMMManager hmmManager, Map<String, Unit> contextIndependentUnits, Properties modelProps) {
    this.senonePool = senonePool;
    this.hmmManager = hmmManager;
    this.contextIndependentUnits = contextIndependentUnits;
    this.modelProps = modelProps;
  }

  public Map<String, Unit> getContextIndependentUnits() {
    return contextIndependentUnits;
  }

  public Pool<Senone> getSenonePool() {
    return senonePool;
  }

  public int getLeftContextSize() {
    return CONTEXT_SIZE;
  }

  public int getRightContextSize() {
    return CONTEXT_SIZE;
  }

  public HMMManager getHMMManager() {
    return hmmManager;
  }

  public Properties getProperties() {
    return modelProps;
  }

}
